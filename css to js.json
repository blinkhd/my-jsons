{"uuid":"05e09440-01cf-4533-885b-d68fce94d854","name":"css to js","description":"","created":"2024-05-23T22:49:46.957Z","updated":"2024-05-29T02:09:46.252Z","data":{"html":"","css":"","javascript":"const obj = document.createElement('div');\ndocument.body.appendChild(obj);\nobj.style.width = '600px';\n//obj.style.height = '500px';\nobj.style.background = 'hsl(0, 0%, 10%)';\nobj.style.borderRadius = '10px';\nobj.style.position = 'absolute';\nobj.style.textAlign = 'center';\nobj.style.color = 'white';\nobj.style.overflow = 'hidden';\nobj.style.top = '50%';\nobj.style.left = '50%';\nobj.style.transform = 'translateX(-50%) translateY(-50%)'\n\nconst title = obj.appendChild(document.createTextNode(\"input css code\"));\n\nconst input = obj.appendChild(document.createElement('textarea'));\ninput.style.width = '550px';\ninput.style.height = '200px'\ninput.placeholder = \"right here (it can only do blocks with id selectors, and make sure there are NO line breaks in lists of selectors)\\n\\nThis won't do ALL the work for you (you'll still have to work a little to apply it to the code instead of just copypasting it all in, since html dom css styling is finnicky), but it does the busywork for you\\n\\nlast thing i promise, if part of the CSS styles the document's body, put a # in front of the body selector as well as everything else, like in the example.\"\n\nconst enter = obj.appendChild(document.createElement('button'));\nenter.innerText = \"enter\"\nenter.onclick = () => {\n  \n  inval = input.value+\"\\n\";\n  let front = [];\n  let back = [];\n  let chunks = [];\n  for (let i = 0; i < inval.length; i++) {\n   if (inval.substring(i,i+1)===\"#\" && inval.substring(i-2,i+1)!=\", #\" && inval.substring(i-2,i+1)!=\": #\") {\n     front.push(i);\n   }\n   if (inval.substring(i,i+2)===\"}\\n\") {\n     back.push(i);\n   }\n  }\n  for (let i = 0; i < back.length; i++) {\n    chunks.push(inval.substring(front[i],back[i]))\n  }\n  \n  \n  let bchk = [];\n  let string2c = \"\";\n  let hschk = [];\n  let bks = [];\n  let multis = [];\n  let backnd = \"\";\n  let testr = [];\n  let cont = 0\n  let conts = [];\n  for (let i = 0; i < chunks.length; i++) {\n    multis = [];\n    cont = 0;\n    bchk = [];\n    //testr = [];\n    for (let j = 0; j < chunks[i].length; j++) {\n      if (chunks[i].substring(j,j+2)===\" {\") {\n        bchk.push(j);\n      }\n    }\n    string2c = chunks[i].substring(0,bchk[0])+\", \"\n    hschk = [];\n    bks = [];\n    for (let i = 0; i < string2c.length; i++) {\n      if (string2c.substring(i,i+1)===\"#\") {\n        hschk.push(i);\n        cont++\n      }\n      if (string2c.substring(i,i+2)===\", \") {\n        bks.push(i);\n      }\n    }\n    conts.push(cont)\n    for (let i = 0; i < bks.length; i++) {\n      multis.push(string2c.substring(hschk[i],bks[i]))\n    }\n    backnd = chunks[i].substring(bchk[0],chunks[i].length)\n    for (let c = 0; c < multis.length; c++) {\n      testr.push(multis[c]+backnd);\n    }\n  }\n  \n  for(let i=0; i<conts.length; i++) {\n    if(conts[i]>1){\n      chunks = chunks.splice(i,i);\n    }\n  }\n  \n  for(let i=0; i<testr.length; i++) {\n   chunks.push(testr[i]) \n  }\n  \n  //input.value = chunks;\n  \n  input.value = \"\";;\n  \n  for (let i = 0; i < chunks.length; i++) {\n\n    inval = chunks[i];\n    front = [];\n    back = [];\n    let objId = \"\";\n    let stlNames = [];\n    let stlVals = [];\n    \n    //get object name\n    for (let i = 0; i < inval.length; i++) {\n     if (inval.substring(i,i+1)===\"#\") {\n       front.push(i+1);\n     }\n     if (inval.substring(i,i+1)===\"{\") {\n       back.push(i-1);\n     }\n     \n    }\n    objId=inval.substring(front[0], back[0]);\n    if (objId===\"body\") {\n      objId = \"document.body\"\n    }\n    //get style names\n    front = [];\n    back = [];\n    let checker = \"\";\n    for (let i = 0; i < inval.length; i++) {\n     if (inval.substring(i,i+2)===\"{\\n\" || inval.substring(i,i+2)===\";\\n\" && inval.substring(i,i+3)!=\";\\n}\") {\n       front.push(i+2);\n     }\n     if (inval.substring(i,i+1)===\":\") {\n       back.push(i);\n     }\n    }\n    for (let i = 0; i < back.length; i++) {\n      stlNames.push(inval.substring(front[i],back[i]).replace(\" \",\"\"))\n    }\n    for (let i = 0; i < stlNames.length; i++) {\n      stlNames[i] = stlNames[i].replaceAll(\" \",\"\")\n      mark = 0;\n      checker = stlNames[i];\n      for (let i = 0; i < checker.length; i++) {\n        if (checker.substring(i,i+1)===\"-\") {\n          mark = i\n        }\n      }\n      let upc = checker.substring(mark+1,mark+2).toUpperCase();\n      let bef = checker.substring(0,mark)\n      let aft = checker.substring(mark+2,checker.length)\n      if (mark!=0) {\n        stlNames[i] = bef + upc + aft\n        //\n      }\n    }\n    \n    //get style values\n    front = [];\n    back = [];\n    for (let i = 0; i < inval.length; i++) {\n     if (inval.substring(i,i+2)===\": \") {\n       front.push(i+1);\n     }\n     if (inval.substring(i,i+1)===\";\") {\n       back.push(i);\n     }\n    }\n    for (let i = 0; i < back.length; i++) {\n      stlVals.push(inval.substring(front[i]+1,back[i]))\n    }\n    \n    let jscss = \"\";\n    for (let i = 0; i < stlNames.length; i++) {\n      jscss = jscss + objId + \".style.\" + stlNames[i] + \" = '\" + stlVals[i] + \"'\\n\"\n    }\n    //jscss = jscss.replaceAll(\" \",\"\");\n    input.value = input.value+jscss\n  }\n}\n\nconst example = obj.appendChild(document.createElement('button'));\nexample.innerText = \"example\"\nexample.onclick = () => {\n  const obj2 = document.createElement('div');\n  document.body.appendChild(obj2);\n  obj2.style.width = '300px';\n  //obj.style.height = '500px';\n  obj2.style.background = 'hsl(0, 0%, 10%)';\n  obj2.style.borderRadius = '10px';\n  obj2.style.position = 'absolute';\n  //obj2.style.textAlign = 'center';\n  obj2.style.color = 'white';\n  obj2.style.overflow = 'hidden';\n  obj2.style.top = '0px';\n  obj2.style.left = '0px';\n  obj2.style.padding = \"20px\"\n  \n  const title2 = obj2.appendChild(document.createTextNode(\"copy this to try:\"));\n  const copyarea = obj2.appendChild(document.createElement('textarea'));\n  copyarea.style.height = \"500px\"\n  copyarea.style.width = \"300px\"\n  \n  copyarea.value = `#body {\n  background-color: #fe9801;\n  color: black;\n  text-align: center;\n}\n\n#container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n#heading {\n  margin-bottom: 20px;\n  font-size: 3rem;\n  color: black;\n}\n\n#header {\n  display: flex;\n  align-items: center;\n}\n\n#timer, #errors, #accuracy, #cpm, #wpm {\n  background-color: #ccda46;\n  height: 60px;\n  width: 70px;\n  margin: 8px;\n  padding: 12px;\n  border-radius: 20%;\n  box-shadow: black 5px 8px 5px;\n}\n\n#cpm, #wpm  {\n  display: none;\n}\n\n#header_text {\n  text-transform: uppercase;\n  font-size: 0.6rem;\n  font-weight: 600;\n}\n\n#curr_time, #curr_errors,\n#curr_accuracy, #curr_cpm,\n#curr_wpm {\n  font-size: 2.75rem;\n}\n\n#quote {\n  background-color: #ccda46;\n  font-size: 1.5rem;\n  margin: 10px;\n  padding: 25px;\n  box-shadow: black 5px 8px 5px;\n}\n\n#input_area {\n  background-color: #f5f5c6;\n  height: 80px;\n  width: 40%;\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin: 15px;\n  padding: 20px;\n  border: 0px;\n  box-shadow: black 5px 8px 5px;\n}\n\n#incorrect_char {\n  color: red;\n  text-decoration: underline;\n}\n\n#correct_char {\n  color: darkgreen;\n}\n\n#restart_btn {\n  display: none;\n  background-color: #326765;\n  font-size: 1.5rem;\n  padding: 10px;\n  border: 0px;\n  box-shadow: black 5px 8px 5px;\n}\n`}\n\n\n\n"}}